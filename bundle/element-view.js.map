{"version":3,"file":"element-view.js","sources":["../node_modules/dom-delegate/lib/delegate.js","../node_modules/dom-delegate/lib/index.js","../src/ElementView.js"],"sourcesContent":["/*jshint browser:true, node:true*/\n\n'use strict';\n\nmodule.exports = Delegate;\n\n/**\n * DOM event delegator\n *\n * The delegator will listen\n * for events that bubble up\n * to the root node.\n *\n * @constructor\n * @param {Node|string} [root] The root node or a selector string matching the root node\n */\nfunction Delegate(root) {\n\n  /**\n   * Maintain a map of listener\n   * lists, keyed by event name.\n   *\n   * @type Object\n   */\n  this.listenerMap = [{}, {}];\n  if (root) {\n    this.root(root);\n  }\n\n  /** @type function() */\n  this.handle = Delegate.prototype.handle.bind(this);\n}\n\n/**\n * Start listening for events\n * on the provided DOM element\n *\n * @param  {Node|string} [root] The root node or a selector string matching the root node\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.root = function(root) {\n  var listenerMap = this.listenerMap;\n  var eventType;\n\n  // Remove master event listeners\n  if (this.rootElement) {\n    for (eventType in listenerMap[1]) {\n      if (listenerMap[1].hasOwnProperty(eventType)) {\n        this.rootElement.removeEventListener(eventType, this.handle, true);\n      }\n    }\n    for (eventType in listenerMap[0]) {\n      if (listenerMap[0].hasOwnProperty(eventType)) {\n        this.rootElement.removeEventListener(eventType, this.handle, false);\n      }\n    }\n  }\n\n  // If no root or root is not\n  // a dom node, then remove internal\n  // root reference and exit here\n  if (!root || !root.addEventListener) {\n    if (this.rootElement) {\n      delete this.rootElement;\n    }\n    return this;\n  }\n\n  /**\n   * The root node at which\n   * listeners are attached.\n   *\n   * @type Node\n   */\n  this.rootElement = root;\n\n  // Set up master event listeners\n  for (eventType in listenerMap[1]) {\n    if (listenerMap[1].hasOwnProperty(eventType)) {\n      this.rootElement.addEventListener(eventType, this.handle, true);\n    }\n  }\n  for (eventType in listenerMap[0]) {\n    if (listenerMap[0].hasOwnProperty(eventType)) {\n      this.rootElement.addEventListener(eventType, this.handle, false);\n    }\n  }\n\n  return this;\n};\n\n/**\n * @param {string} eventType\n * @returns boolean\n */\nDelegate.prototype.captureForType = function(eventType) {\n  return ['blur', 'error', 'focus', 'load', 'resize', 'scroll'].indexOf(eventType) !== -1;\n};\n\n/**\n * Attach a handler to one\n * event for all elements\n * that match the selector,\n * now or in the future\n *\n * The handler function receives\n * three arguments: the DOM event\n * object, the node that matched\n * the selector while the event\n * was bubbling and a reference\n * to itself. Within the handler,\n * 'this' is equal to the second\n * argument.\n *\n * The node that actually received\n * the event can be accessed via\n * 'event.target'.\n *\n * @param {string} eventType Listen for these events\n * @param {string|undefined} selector Only handle events on elements matching this selector, if undefined match root element\n * @param {function()} handler Handler function - event data passed here will be in event.data\n * @param {Object} [eventData] Data to pass in event.data\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.on = function(eventType, selector, handler, useCapture) {\n  var root, listenerMap, matcher, matcherParam;\n\n  if (!eventType) {\n    throw new TypeError('Invalid event type: ' + eventType);\n  }\n\n  // handler can be passed as\n  // the second or third argument\n  if (typeof selector === 'function') {\n    useCapture = handler;\n    handler = selector;\n    selector = null;\n  }\n\n  // Fallback to sensible defaults\n  // if useCapture not set\n  if (useCapture === undefined) {\n    useCapture = this.captureForType(eventType);\n  }\n\n  if (typeof handler !== 'function') {\n    throw new TypeError('Handler must be a type of Function');\n  }\n\n  root = this.rootElement;\n  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n\n  // Add master handler for type if not created yet\n  if (!listenerMap[eventType]) {\n    if (root) {\n      root.addEventListener(eventType, this.handle, useCapture);\n    }\n    listenerMap[eventType] = [];\n  }\n\n  if (!selector) {\n    matcherParam = null;\n\n    // COMPLEX - matchesRoot needs to have access to\n    // this.rootElement, so bind the function to this.\n    matcher = matchesRoot.bind(this);\n\n  // Compile a matcher for the given selector\n  } else if (/^[a-z]+$/i.test(selector)) {\n    matcherParam = selector;\n    matcher = matchesTag;\n  } else if (/^#[a-z0-9\\-_]+$/i.test(selector)) {\n    matcherParam = selector.slice(1);\n    matcher = matchesId;\n  } else {\n    matcherParam = selector;\n    matcher = matches;\n  }\n\n  // Add to the list of listeners\n  listenerMap[eventType].push({\n    selector: selector,\n    handler: handler,\n    matcher: matcher,\n    matcherParam: matcherParam\n  });\n\n  return this;\n};\n\n/**\n * Remove an event handler\n * for elements that match\n * the selector, forever\n *\n * @param {string} [eventType] Remove handlers for events matching this type, considering the other parameters\n * @param {string} [selector] If this parameter is omitted, only handlers which match the other two will be removed\n * @param {function()} [handler] If this parameter is omitted, only handlers which match the previous two will be removed\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.off = function(eventType, selector, handler, useCapture) {\n  var i, listener, listenerMap, listenerList, singleEventType;\n\n  // Handler can be passed as\n  // the second or third argument\n  if (typeof selector === 'function') {\n    useCapture = handler;\n    handler = selector;\n    selector = null;\n  }\n\n  // If useCapture not set, remove\n  // all event listeners\n  if (useCapture === undefined) {\n    this.off(eventType, selector, handler, true);\n    this.off(eventType, selector, handler, false);\n    return this;\n  }\n\n  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n  if (!eventType) {\n    for (singleEventType in listenerMap) {\n      if (listenerMap.hasOwnProperty(singleEventType)) {\n        this.off(singleEventType, selector, handler);\n      }\n    }\n\n    return this;\n  }\n\n  listenerList = listenerMap[eventType];\n  if (!listenerList || !listenerList.length) {\n    return this;\n  }\n\n  // Remove only parameter matches\n  // if specified\n  for (i = listenerList.length - 1; i >= 0; i--) {\n    listener = listenerList[i];\n\n    if ((!selector || selector === listener.selector) && (!handler || handler === listener.handler)) {\n      listenerList.splice(i, 1);\n    }\n  }\n\n  // All listeners removed\n  if (!listenerList.length) {\n    delete listenerMap[eventType];\n\n    // Remove the main handler\n    if (this.rootElement) {\n      this.rootElement.removeEventListener(eventType, this.handle, useCapture);\n    }\n  }\n\n  return this;\n};\n\n\n/**\n * Handle an arbitrary event.\n *\n * @param {Event} event\n */\nDelegate.prototype.handle = function(event) {\n  var i, l, type = event.type, root, phase, listener, returned, listenerList = [], target, /** @const */ EVENTIGNORE = 'ftLabsDelegateIgnore';\n\n  if (event[EVENTIGNORE] === true) {\n    return;\n  }\n\n  target = event.target;\n\n  // Hardcode value of Node.TEXT_NODE\n  // as not defined in IE8\n  if (target.nodeType === 3) {\n    target = target.parentNode;\n  }\n\n  root = this.rootElement;\n\n  phase = event.eventPhase || ( event.target !== event.currentTarget ? 3 : 2 );\n  \n  switch (phase) {\n    case 1: //Event.CAPTURING_PHASE:\n      listenerList = this.listenerMap[1][type];\n    break;\n    case 2: //Event.AT_TARGET:\n      if (this.listenerMap[0] && this.listenerMap[0][type]) listenerList = listenerList.concat(this.listenerMap[0][type]);\n      if (this.listenerMap[1] && this.listenerMap[1][type]) listenerList = listenerList.concat(this.listenerMap[1][type]);\n    break;\n    case 3: //Event.BUBBLING_PHASE:\n      listenerList = this.listenerMap[0][type];\n    break;\n  }\n\n  // Need to continuously check\n  // that the specific list is\n  // still populated in case one\n  // of the callbacks actually\n  // causes the list to be destroyed.\n  l = listenerList.length;\n  while (target && l) {\n    for (i = 0; i < l; i++) {\n      listener = listenerList[i];\n\n      // Bail from this loop if\n      // the length changed and\n      // no more listeners are\n      // defined between i and l.\n      if (!listener) {\n        break;\n      }\n\n      // Check for match and fire\n      // the event if there's one\n      //\n      // TODO:MCG:20120117: Need a way\n      // to check if event#stopImmediatePropagation\n      // was called. If so, break both loops.\n      if (listener.matcher.call(target, listener.matcherParam, target)) {\n        returned = this.fire(event, target, listener);\n      }\n\n      // Stop propagation to subsequent\n      // callbacks if the callback returned\n      // false\n      if (returned === false) {\n        event[EVENTIGNORE] = true;\n        event.preventDefault();\n        return;\n      }\n    }\n\n    // TODO:MCG:20120117: Need a way to\n    // check if event#stopPropagation\n    // was called. If so, break looping\n    // through the DOM. Stop if the\n    // delegation root has been reached\n    if (target === root) {\n      break;\n    }\n\n    l = listenerList.length;\n    target = target.parentElement;\n  }\n};\n\n/**\n * Fire a listener on a target.\n *\n * @param {Event} event\n * @param {Node} target\n * @param {Object} listener\n * @returns {boolean}\n */\nDelegate.prototype.fire = function(event, target, listener) {\n  return listener.handler.call(target, event, target);\n};\n\n/**\n * Check whether an element\n * matches a generic selector.\n *\n * @type function()\n * @param {string} selector A CSS selector\n */\nvar matches = (function(el) {\n  if (!el) return;\n  var p = el.prototype;\n  return (p.matches || p.matchesSelector || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector);\n}(Element));\n\n/**\n * Check whether an element\n * matches a tag selector.\n *\n * Tags are NOT case-sensitive,\n * except in XML (and XML-based\n * languages such as XHTML).\n *\n * @param {string} tagName The tag name to test against\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesTag(tagName, element) {\n  return tagName.toLowerCase() === element.tagName.toLowerCase();\n}\n\n/**\n * Check whether an element\n * matches the root.\n *\n * @param {?String} selector In this case this is always passed through as null and not used\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesRoot(selector, element) {\n  /*jshint validthis:true*/\n  if (this.rootElement === window) return element === document;\n  return this.rootElement === element;\n}\n\n/**\n * Check whether the ID of\n * the element in 'this'\n * matches the given ID.\n *\n * IDs are case-sensitive.\n *\n * @param {string} id The ID to test against\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesId(id, element) {\n  return id === element.id;\n}\n\n/**\n * Short hand for off()\n * and root(), ie both\n * with no parameters\n *\n * @return void\n */\nDelegate.prototype.destroy = function() {\n  this.off();\n  this.root();\n};\n","/*jshint browser:true, node:true*/\n\n'use strict';\n\n/**\n * @preserve Create and manage a DOM event delegator.\n *\n * @version 0.3.0\n * @codingstandard ftlabs-jsv2\n * @copyright The Financial Times Limited [All Rights Reserved]\n * @license MIT License (see LICENSE.txt)\n */\nvar Delegate = require('./delegate');\n\nmodule.exports = function(root) {\n  return new Delegate(root);\n};\n\nmodule.exports.Delegate = Delegate;\n","import domDelegate from 'dom-delegate';\n\n/**\n * Simple View layer for HTMLElement\n */\nexport default class ElementView {\n    /**\n     * @return {Delegate}\n     * @constructor\n     */\n    static get Delegate() {\n        return domDelegate.Delegate;\n    }\n\n    /**\n     * Event listeners.\n     *\n     * @return {Object.<String, Function|Object.<String, Function>>}\n     */\n    get events() {\n        return {};\n    }\n\n    /**\n     * Direct access to Delegate.\n     *\n     * @return {Delegate}\n     */\n    get delegate() {\n        return this._delegate;\n    }\n\n    /**\n     * Root element.\n     *\n     * @return {HTMLElement}\n     */\n    get root() {\n        return this._root;\n    }\n\n    /**\n     * @param {HTMLElement} htmlElement\n     */\n    constructor(htmlElement) {\n        /** @protected */\n        this._root = htmlElement;\n        this._delegate = new ElementView.Delegate(htmlElement);\n        this._attachListeners(this.events);\n    }\n\n    /**\n     * Remove all registered listeners and attach them again.\n     */\n    resetEvents() {\n        this._delegate.off();\n        this._attachListeners(this.events);\n    }\n\n    /**\n     * @param {Object.<String, Function|Object.<String, Function>>} listeners\n     * @param {String} [selector]\n     *\n     * @protected\n     */\n    _attachListeners(listeners, selector = null) {\n        for (const eventName in listeners) {\n            if (listeners.hasOwnProperty(eventName)) {\n                const listener = listeners[eventName];\n\n                switch (typeof listener) {\n                    case 'function':\n                        if (selector === null) {\n                            this._delegate.on(eventName, (...args) => {\n                                listener.apply(this, args);\n                            });\n                        } else if (typeof selector === 'string') {\n                            this._delegate.on(eventName, selector, (...args) => {\n                                listener.apply(this, args);\n                            });\n                        }\n\n                        break;\n                    case 'object':\n                        if (selector === null) {\n                            this._attachListeners(listener, eventName);\n                        }\n\n                        break;\n                    default:\n                }\n            }\n        }\n    }\n}\n"],"names":["Delegate","root","listenerMap","handle","prototype","bind","eventType","rootElement","hasOwnProperty","removeEventListener","addEventListener","captureForType","indexOf","on","selector","handler","useCapture","matcher","matcherParam","TypeError","undefined","matchesRoot","test","matchesTag","slice","matchesId","matches","push","off","i","listener","listenerList","singleEventType","length","splice","event","l","type","phase","returned","target","EVENTIGNORE","nodeType","parentNode","eventPhase","currentTarget","concat","call","fire","preventDefault","parentElement","el","p","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","Element","tagName","element","toLowerCase","window","document","id","destroy","ElementView","_delegate","_root","domDelegate","htmlElement","_attachListeners","events","listeners","eventName","args","apply"],"mappings":"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"}